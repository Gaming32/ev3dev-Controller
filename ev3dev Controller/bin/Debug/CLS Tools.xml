<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CLS Tools</name>
    </assembly>
    <members>
        <member name="T:CLSTools.Serialization">
            <summary>
            Class for saving and loading objects from files (similar to Python's shelve)
            </summary>
        </member>
        <member name="M:CLSTools.Serialization.Save``1(``0,System.String,System.String)">
            <summary>
            Saves the object to the specified file
            </summary>
            <typeparam name="T">The type of object you are saving (must have the Serializable attribute)</typeparam>
            <param name="settings">The object you are saving</param>
            <param name="fileName">The name of the file you are saving to</param>
            <param name="keyName">The name of the key you are saving to</param>
        </member>
        <member name="M:CLSTools.Serialization.Load``1(System.String,System.String)">
            <summary>
            Recalls a serialized object from a file
            </summary>
            <typeparam name="T">The type of object</typeparam>
            <param name="fileName">The file to recall from</param>
            <param name="keyName">The key to recall from</param>
            <returns>The object you deserialized</returns>
        </member>
        <member name="T:CLSTools.BasicTools">
            <summary>
            Contains the basic tools for CLS Tools
            </summary>
        </member>
        <member name="P:CLSTools.BasicTools.RunLength">
            <summary>
            The length that the program has been running
            </summary>
        </member>
        <member name="M:CLSTools.BasicTools.LogCsv(System.Object,System.String,System.Boolean)">
            <summary>
            Logs messages to a file
            </summary>
            <param name="message">The message to log</param>
            <param name="path">The path to store the log (uses the working directory be default)</param>
            <param name="includeAppName">Whether to include the name of the executable in the name of the log file</param>
            <returns>The time of the logging in a tuple (time of logging, time that the application has run)</returns>
        </member>
        <member name="M:CLSTools.BasicTools.LogErr(System.Exception,System.String,System.Boolean)">
            <summary>
            Logs the specified exception to a file
            </summary>
            <param name="ex">The exception to log</param>
            <param name="path">The place to directory to log to</param>
            <param name="includeAppName">Whether to include the name of the program in the log file name</param>
            <returns>The time that the exception was logged</returns>
        </member>
        <member name="M:CLSTools.BasicTools.FixNull``1(``0)">
            <summary>
            Takes in a null or non-null variable and returns a non-null variable
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input">The null or non-null variable</param>
            <returns>The non-null variable</returns>
        </member>
        <member name="M:CLSTools.BasicTools.StrSplit(System.String,System.Int32)">
            <summary>
            Splits a string into a string array where each substring is the specified length
            </summary>
            <param name="str">The string to split</param>
            <param name="substrLength">The length of each substring</param>
            <returns>The split string</returns>
        </member>
    </members>
</doc>
